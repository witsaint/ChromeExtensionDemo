{
  "name": "var",
  "version": "0.1",
  "manifest_version": 2, // 这货没啥用，还非得有，渣渣
  "description": "假装这是个描述",
  "omnibox": { "keyword" : "helloworld" }, // 建议不要中间带空格
  "icons": { "128": "img/hand128.png", "16": "img/safe.png" },
  // "background_page": "background.html", 和下面雷同，主要是只能用一个，看你心情，如果用background_page下面就不要带page了，还有用了scripts就别用page了
  "background": // 会一直常驻的后台JS或后台页面
  {
    "page": "background.html",
    // 2种指定方式，如果指定JS，那么会自动生成一个背景页
    // "scripts": ["bg.js"],
    "persistent": false // 区分是否为事件页面还是后台页面
  },
  // 需要直接注入页面的JS
  "content_scripts":
  [
    {
      //"matches": ["http://*/*", "https://*/*"],
      // "<all_urls>" 表示匹配所有地址
      "matches": ["<all_urls>"],
      // 多个JS按顺序注入
      "js": ["content.js"],
      // JS的注入可以随便一点，但是CSS的注意就要千万小心了，因为一不小心就可能影响全局样式
      //"css": ["css/custom.css"],
      // 代码注入的时间，可选值： "document_start", "document_end", or "document_idle"，最后一个表示页面空闲时，默认document_idle
      "run_at": "document_start"
    }
  ],
  "permissions": [
    "background",
    "tabs",
    "bookmarks",
    "contextMenus",
    "notifications",
    "unlimitedStorage",
    "http://*/*",
    "storage",
    "<all_urls>"
  ],
  "browser_action": {
    "default_title": "哥哥.....点这里、点这里、点这里、",
    "default_icon": "img/hand.png",
    "default_popup": "popup.html"
  },
  //page_action 同上
  // 普通页面能够直接访问的插件资源列表，如果不设置是无法直接访问的，当然也是可以css之类的文件
  "web_accessible_resources": ["js/inject.js"],
  "chrome_url_overrides": {
    "newtab": "default.html"
  }
}
